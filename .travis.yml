language: minimal
sudo: false
notifications:
  email: false

branches:
  except:
    - docs
    - salem-dev
    - refactor
    - dev

matrix:
  fast_finish: true
  include:
  - env: CONDA_ENV=py37-all MPL=--mpl
  - env: CONDA_ENV=py36-all MPL=--mpl
  - env: CONDA_ENV=py37-pyproj MPL=--mpl
  - env: CONDA_ENV=py37-min MPL=
  - env: CONDA_ENV=py37-xr MPL=
  - env: CONDA_ENV=py37-xarray-dev MPL=--mpl
  - env: CONDA_ENV=py37-all-rc MPL=--mpl
  allow_failures:
  - env: CONDA_ENV=py36-all MPL=--mpl
  - env: CONDA_ENV=py37-xr MPL=
  - env: CONDA_ENV=py37-xarray-dev MPL=--mpl
  - env: CONDA_ENV=py37-all-rc MPL=--mpl

before_install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda config --set channel_priority strict
  - pip install pyyaml

install:
  - conda env create --file ci/requirements-$CONDA_ENV.yml --quiet
  - source activate test_env
  - pip install -e .

before_script:
  - export MPLBACKEND=agg

script:
  - which python
  - python --version
  - pytest salem $MPL --verbose --cov=salem --cov-report term-missing;

after_success:
  - coveralls
